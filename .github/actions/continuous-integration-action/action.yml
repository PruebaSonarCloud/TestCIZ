name: continuous-integration-action
description: Action for continuous integration
inputs:
  SONAR_PROJECT_KEY:
    description: Sonarqube project key
    required: true
  SONAR_HOST_URL:
    description: Sonarqube host url
    required: true
  SONARQUBE_TOKEN:
    description: Sonarqube token
    required: true
  MIN_COVERAGE_VALUE:
    description: Minimum coverage value
    required: false
    default: 40
    type: integer
  MIN_BUGS_VALUE:
    description: Minimum bugs value
    required: false
    default: 0
    type: integer
  MIN_HOTSPOTS_VALUE:
    description: Minimum hotspots value
    required: false
    default: 0
    type: integer
  MIN_EFFORT_VALUE:
    description: Minimum effort value
    required: false
    default: 60
    type: integer
  

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3

    - name: Install Sonar Scanner
      run: brew install sonar-scanner
      shell: bash
    
    - name: Xcode Setup
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.3'
        
    - name: Get sonarqube coverage history
      run: |
          # execute curl command and get the output value using jq
          echo "sonar token" ${{ inputs.SONARQUBE_TOKEN }}
          coverage_value=$(curl -G --data-urlencode "component=${{ inputs.SONAR_PROJECT_KEY }}" --data-urlencode "metrics=coverage" -s -u ${{ inputs.SONARQUBE_TOKEN }}: ${{ inputs.SONAR_HOST_URL }}/api/measures/search_history | jq -r '.measures[0].history[-1].value')
          bugs_vulnerability=$(curl -G --data-urlencode "componentKeys=${{ inputs.SONAR_PROJECT_KEY }}" --data-urlencode "types=BUG,VULNERABILITY" --data-urlencode "statuses=OPEN,REOPENED" -s -u ${{ inputs.SONARQUBE_TOKEN }}: ${{ inputs.SONAR_HOST_URL }}/api/issues/search | jq -r '.total')
          hotspots=$(curl -G --data-urlencode "projectKey=${{ inputs.SONAR_PROJECT_KEY }}" -s -u ${{ inputs.SONARQUBE_TOKEN }}: ${{ inputs.SONAR_HOST_URL }}/api/hotspots/search | jq -r '.paging.total')
          effort_total=$(curl -G --data-urlencode "componentKeys=${{ inputs.SONAR_PROJECT_KEY }}" --data-urlencode "types=CODE_SMELL" --data-urlencode "statuses=OPEN,REOPENED" -s -u ${{ inputs.SONARQUBE_TOKEN }}: ${{ inputs.SONAR_HOST_URL }}/api/issues/search | jq -r '.effortTotal')
          # print the coverage value
          echo "COVERAGE_VALUE=$coverage_value" >> $GITHUB_ENV
          echo "BUGS_VALUE=$bugs_vulnerability" >> $GITHUB_ENV
          echo "HOTSPOTS_VALUE=$hotspots" >> $GITHUB_ENV
          echo "EFFORT_VALUE=$effort_total" >> $GITHUB_ENV
      shell: bash
          
    


